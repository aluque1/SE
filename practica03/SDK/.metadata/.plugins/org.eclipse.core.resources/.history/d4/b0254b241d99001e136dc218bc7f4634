/*
 * peripheral_practica03_prog_selftest.c
 *
 *  Created on: 12 Dec 2023
 *      Author: aluqu
 */
/*
* @ param baseaddr_p is the base address of the MY_PERIPHERAL instance to be worked on.
*
* @return
*
* - XST_SUCCESS if all self-test code passed
* - XST_FAILURE if any self-test code failed
*
*/

#include "peripheral_practica03_prog.h"

XStatus MY_PERIPHERAL_SelfTest(void * baseaddr_p)
{
	int Index;
	Xuint32 baseaddr;
	Xuint8 Reg8Value;
	Xuint16 Reg16Value;
	Xuint32 Reg32Value;

	/*
	 *
	 * 	Check and get the device address
	*/
	/*
	* Base Address maybe 0. Up to developer to uncomment line below.
	XASSERT_NONVOID(baseaddr_p != XNULL);
	*/
	baseaddr = (Xuint32) baseaddr_p;

	xil_printf("******************************\n\r");
	xil_printf("* User Peripheral Self Test  *\n\r");
	xil_printf("******************************\n\n\r");

	xil_printf(" - write 1 to slave register 0 word 0\n\r");
	MY_PERIPHERAL_mWriteSlaveReg0(baseaddr, 0, 1);
	Reg32Value = MY_PERIPHERAL_mReadSlaveReg0(baseaddr, 0);
	xil_printf(" - read %d from register 0 word 0\n\r", Reg32Value);
	if ( Reg32Value != (Xuint32)1){
		xil_printf(" - slave register 0 word 0 write/read failed\n\r");
		return XST_FAILURE;
	}

	xil_printf(" - write 2 to slave register 1 word 0\n\r");
	MY_PERIPHERAL_mWriteSlaveReg1(baseaddr, 0, 2);
	Reg32Value = MY_PERIPHERAL_mReadSlaveReg1(baseaddr, 0);
	xil_printf(" - read %d from register 1 word 0\n\r", Reg32Value);
	if ( Reg32Value != (Xuint32) 2 ){
		xil_printf(" - slave register 1 word 0 write/read failed\n\r");
		return XST_FAILURE;
	}
