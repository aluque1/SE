/*
 * peripheral_practica03_prog.c
 *
 *  Created on: 12 Dec 2023
 *      Author: aluqu
 */

/*****************************
 * 		Include Files
*******************************/
#include "peripheral_practica03_prog.h"
#include "xparameters.h"
/**************************
 * 		Function Definitions
***************************/
XStatus periphal_practica03_prog_SelfTest(void * baseaddr_p);

int main() {
	XStatus status = periphal_practica03_prog_SelfTest(XPAR_PERIPHERAL_PRACTICA03_0_BASEADDR);
	if(status == XST_FAILURE)
		print("ME CAGOOO");
	else
		print("NO ME CAGO");
	return status;
}


/*
* @ param baseaddr_p is the base address of the MY_PERIPHERAL instance to be worked on.
*
* @return
*
* - XST_SUCCESS if all self-test code passed
* - XST_FAILURE if any self-test code failed
*
*/
XStatus periphal_practica03_prog_SelfTest(void * baseaddr_p)
{
	int Index;
	Xuint32 baseaddr;
	Xuint8 Reg8Value;
	Xuint16 Reg16Value;
	Xuint32 Reg32Value;
	// Base Address maybe 0. Up to developer to uncomment line below.

	// XASSERT_NONVOID(baseaddr_p != XNULL);

	baseaddr = (Xuint32) baseaddr_p;
	xil_printf("******************************\n\r");
	xil_printf("* User Peripheral Self Test  *\n\r");
	xil_printf("******************************\n\n\r");

	xil_printf(" - write 1 to slave register 0 word 0\n\r");
	MY_PERIPHERAL_mWriteSlaveReg0(baseaddr, 0, 1);
	Reg32Value = MY_PERIPHERAL_mReadSlaveReg0(baseaddr, 0);
	xil_printf(" - read %d from register 0 word 0\n\r", Reg32Value);
	if (Reg32Value != 1)
	{
		xil_printf(" - slave register 0 word 0 write/read failed\n\r");
		return XST_FAILURE;
	}

	xil_printf(" - write 1 to slave register 1 word 0\n\r");
	MY_PERIPHERAL_mWriteSlaveReg1(baseaddr, 0, 1);
	Reg32Value = MY_PERIPHERAL_mReadSlaveReg1(baseaddr, 0);
	xil_printf(" - read %d from register 1 word 0\n\r", Reg32Value);
	if (Reg32Value != 1)
	{
		xil_printf(" - slave register 1 word 0 write/read failed\n\r");
		return XST_FAILURE;
	}

	xil_printf(" - write 1 to slave register 2 word 0\n\r");
	MY_PERIPHERAL_mWriteSlaveReg2(baseaddr, 0, 1);
	Reg32Value = MY_PERIPHERAL_mReadSlaveReg2(baseaddr, 0);
	xil_printf(" - read %d from register 2 word 0\n\r", Reg32Value);
	if (Reg32Value != 1)
	{
		xil_printf(" - slave register 2 word 0 write/read failed\n\r");
		return XST_FAILURE;
	}

	xil_printf(" - write 1 to slave register 3 word 0\n\r");
	MY_PERIPHERAL_mWriteSlaveReg3(baseaddr, 0, 4294967295);
	Reg32Value = MY_PERIPHERAL_mReadSlaveReg3(baseaddr, 0);
	xil_printf(" - read %d from register 3 word 0\n\r", Reg32Value);
	if (Reg32Value != 1)
	{
		xil_printf(" - slave register 3 word 0 write/read failed\n\r");
		return XST_FAILURE;
	}
	
	return XST_SUCCESS;
}
